
GccApplication9.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000224  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ab  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005ba  00000000  00000000  00000bb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c2  00000000  00000000  00001171  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001534  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000340  00000000  00000000  00001568  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000345  00000000  00000000  000018a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001bed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3d 00 	call	0x7a	; 0x7a <main>
  64:	0c 94 10 01 	jmp	0x220	; 0x220 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <init>:
#include <util/delay.h>

void init(unsigned char UBBR_Value)
{
	
	UBRRH = (unsigned char) (UBBR_Value >> 8);
  6c:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) UBBR_Value;
  6e:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1<<RXEN) | (1<<TXEN);
  70:	88 e1       	ldi	r24, 0x18	; 24
  72:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1<< USBS) | (3<<UCSZ0);
  74:	8e e0       	ldi	r24, 0x0E	; 14
  76:	80 bd       	out	0x20, r24	; 32
  78:	08 95       	ret

0000007a <main>:
	
}

int main()
{
	DDRB = 0xff;
  7a:	8f ef       	ldi	r24, 0xFF	; 255
  7c:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;
  7e:	1a ba       	out	0x1a, r1	; 26
	
	DDRD |= (1<<PIND1);
  80:	81 b3       	in	r24, 0x11	; 17
  82:	82 60       	ori	r24, 0x02	; 2
  84:	81 bb       	out	0x11, r24	; 17
    DDRD &= ~(1<<PIND0);
  86:	81 b3       	in	r24, 0x11	; 17
  88:	8e 7f       	andi	r24, 0xFE	; 254
  8a:	81 bb       	out	0x11, r24	; 17
	//PORTD |= 1 << PIND1;
	PORTD |= 1 << PIND0;
  8c:	82 b3       	in	r24, 0x12	; 18
  8e:	81 60       	ori	r24, 0x01	; 1
  90:	82 bb       	out	0x12, r24	; 18
	
	init(25);
  92:	89 e1       	ldi	r24, 0x19	; 25
  94:	0e 94 36 00 	call	0x6c	; 0x6c <init>
	while (1) 
    {
		PORTB = 0b00000001;
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	88 bb       	out	0x18, r24	; 24
		if(bit_is_set(PINA,4))
  9c:	cc 9b       	sbis	0x19, 4	; 25
  9e:	0e c0       	rjmp	.+28     	; 0xbc <main+0x42>
		{
			while(!(UCSRA &(1<<UDRE)));
  a0:	5d 9b       	sbis	0x0b, 5	; 11
  a2:	fe cf       	rjmp	.-4      	; 0xa0 <main+0x26>
			{
				UDR ='1';
  a4:	81 e3       	ldi	r24, 0x31	; 49
  a6:	8c b9       	out	0x0c, r24	; 12
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	2f e3       	ldi	r18, 0x3F	; 63
  aa:	8d e0       	ldi	r24, 0x0D	; 13
  ac:	93 e0       	ldi	r25, 0x03	; 3
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	80 40       	sbci	r24, 0x00	; 0
  b2:	90 40       	sbci	r25, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x34>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <main+0x3e>
  b8:	00 00       	nop
  ba:	2f c0       	rjmp	.+94     	; 0x11a <main+0xa0>
			}
			_delay_ms(1000);
		}
		
		else if(bit_is_set(PINA,3))
  bc:	cb 9b       	sbis	0x19, 3	; 25
  be:	0e c0       	rjmp	.+28     	; 0xdc <main+0x62>
		{
			while(!(UCSRA &(1<<UDRE)));
  c0:	5d 9b       	sbis	0x0b, 5	; 11
  c2:	fe cf       	rjmp	.-4      	; 0xc0 <main+0x46>
			{
				UDR ='4';
  c4:	84 e3       	ldi	r24, 0x34	; 52
  c6:	8c b9       	out	0x0c, r24	; 12
  c8:	2f e3       	ldi	r18, 0x3F	; 63
  ca:	8d e0       	ldi	r24, 0x0D	; 13
  cc:	93 e0       	ldi	r25, 0x03	; 3
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x54>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x5e>
  d8:	00 00       	nop
  da:	1f c0       	rjmp	.+62     	; 0x11a <main+0xa0>
			_delay_ms(1000);
			
			
		}
		
		else if(bit_is_set(PINA,2))
  dc:	ca 9b       	sbis	0x19, 2	; 25
  de:	0e c0       	rjmp	.+28     	; 0xfc <main+0x82>
		{
			while(!(UCSRA &(1<<UDRE)));
  e0:	5d 9b       	sbis	0x0b, 5	; 11
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <main+0x66>
			{
				UDR ='7';
  e4:	87 e3       	ldi	r24, 0x37	; 55
  e6:	8c b9       	out	0x0c, r24	; 12
  e8:	2f e3       	ldi	r18, 0x3F	; 63
  ea:	8d e0       	ldi	r24, 0x0D	; 13
  ec:	93 e0       	ldi	r25, 0x03	; 3
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x74>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x7e>
  f8:	00 00       	nop
  fa:	0f c0       	rjmp	.+30     	; 0x11a <main+0xa0>
			}
			_delay_ms(1000);
		}
	
		else if(bit_is_set(PINA,1))
  fc:	c9 9b       	sbis	0x19, 1	; 25
  fe:	0d c0       	rjmp	.+26     	; 0x11a <main+0xa0>
		{
			while(!(UCSRA &(1<<UDRE)));
 100:	5d 9b       	sbis	0x0b, 5	; 11
 102:	fe cf       	rjmp	.-4      	; 0x100 <main+0x86>
			{
				UDR ='*';
 104:	8a e2       	ldi	r24, 0x2A	; 42
 106:	8c b9       	out	0x0c, r24	; 12
 108:	2f e3       	ldi	r18, 0x3F	; 63
 10a:	8d e0       	ldi	r24, 0x0D	; 13
 10c:	93 e0       	ldi	r25, 0x03	; 3
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <main+0x94>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0x9e>
 118:	00 00       	nop
			_delay_ms(1000);
		}
			
		
		
		PORTB = 0b00000010;
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	88 bb       	out	0x18, r24	; 24
		if(bit_is_set(PINA,4))
 11e:	cc 9b       	sbis	0x19, 4	; 25
 120:	0e c0       	rjmp	.+28     	; 0x13e <main+0xc4>
		{
			while(!(UCSRA &(1<<UDRE)));
 122:	5d 9b       	sbis	0x0b, 5	; 11
 124:	fe cf       	rjmp	.-4      	; 0x122 <main+0xa8>
			{
				UDR ='2';
 126:	82 e3       	ldi	r24, 0x32	; 50
 128:	8c b9       	out	0x0c, r24	; 12
 12a:	2f e3       	ldi	r18, 0x3F	; 63
 12c:	8d e0       	ldi	r24, 0x0D	; 13
 12e:	93 e0       	ldi	r25, 0x03	; 3
 130:	21 50       	subi	r18, 0x01	; 1
 132:	80 40       	sbci	r24, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0xb6>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0xc0>
 13a:	00 00       	nop
 13c:	2f c0       	rjmp	.+94     	; 0x19c <main+0x122>
			}
			_delay_ms(1000);
		}
		
		else if(bit_is_set(PINA,3))
 13e:	cb 9b       	sbis	0x19, 3	; 25
 140:	0e c0       	rjmp	.+28     	; 0x15e <main+0xe4>
		{
			while(!(UCSRA &(1<<UDRE)));
 142:	5d 9b       	sbis	0x0b, 5	; 11
 144:	fe cf       	rjmp	.-4      	; 0x142 <main+0xc8>
			{
				UDR ='5';
 146:	85 e3       	ldi	r24, 0x35	; 53
 148:	8c b9       	out	0x0c, r24	; 12
 14a:	2f e3       	ldi	r18, 0x3F	; 63
 14c:	8d e0       	ldi	r24, 0x0D	; 13
 14e:	93 e0       	ldi	r25, 0x03	; 3
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0xd6>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0xe0>
 15a:	00 00       	nop
 15c:	1f c0       	rjmp	.+62     	; 0x19c <main+0x122>
			}
			_delay_ms(1000);
		}
		else if(bit_is_set(PINA,2))
 15e:	ca 9b       	sbis	0x19, 2	; 25
 160:	0e c0       	rjmp	.+28     	; 0x17e <main+0x104>
		{
			while(!(UCSRA &(1<<UDRE)));
 162:	5d 9b       	sbis	0x0b, 5	; 11
 164:	fe cf       	rjmp	.-4      	; 0x162 <main+0xe8>
			{
				UDR ='8';
 166:	88 e3       	ldi	r24, 0x38	; 56
 168:	8c b9       	out	0x0c, r24	; 12
 16a:	2f e3       	ldi	r18, 0x3F	; 63
 16c:	8d e0       	ldi	r24, 0x0D	; 13
 16e:	93 e0       	ldi	r25, 0x03	; 3
 170:	21 50       	subi	r18, 0x01	; 1
 172:	80 40       	sbci	r24, 0x00	; 0
 174:	90 40       	sbci	r25, 0x00	; 0
 176:	e1 f7       	brne	.-8      	; 0x170 <main+0xf6>
 178:	00 c0       	rjmp	.+0      	; 0x17a <main+0x100>
 17a:	00 00       	nop
 17c:	0f c0       	rjmp	.+30     	; 0x19c <main+0x122>
			}
			_delay_ms(1000);
		}
		
		else if(bit_is_set(PINA,1))
 17e:	c9 9b       	sbis	0x19, 1	; 25
 180:	0d c0       	rjmp	.+26     	; 0x19c <main+0x122>
		{
			while(!(UCSRA &(1<<UDRE)));
 182:	5d 9b       	sbis	0x0b, 5	; 11
 184:	fe cf       	rjmp	.-4      	; 0x182 <main+0x108>
			{
				UDR =' ';
 186:	80 e2       	ldi	r24, 0x20	; 32
 188:	8c b9       	out	0x0c, r24	; 12
 18a:	2f e3       	ldi	r18, 0x3F	; 63
 18c:	8d e0       	ldi	r24, 0x0D	; 13
 18e:	93 e0       	ldi	r25, 0x03	; 3
 190:	21 50       	subi	r18, 0x01	; 1
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0x116>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x120>
 19a:	00 00       	nop
			_delay_ms(1000);
		}
		
		
		
		PORTB = 0b00000100;
 19c:	84 e0       	ldi	r24, 0x04	; 4
 19e:	88 bb       	out	0x18, r24	; 24
		if(bit_is_set(PINA,4))
 1a0:	cc 9b       	sbis	0x19, 4	; 25
 1a2:	0e c0       	rjmp	.+28     	; 0x1c0 <main+0x146>
		{
			while(!(UCSRA &(1<<UDRE)));
 1a4:	5d 9b       	sbis	0x0b, 5	; 11
 1a6:	fe cf       	rjmp	.-4      	; 0x1a4 <main+0x12a>
			{
				UDR ='3';
 1a8:	83 e3       	ldi	r24, 0x33	; 51
 1aa:	8c b9       	out	0x0c, r24	; 12
 1ac:	2f e3       	ldi	r18, 0x3F	; 63
 1ae:	8d e0       	ldi	r24, 0x0D	; 13
 1b0:	93 e0       	ldi	r25, 0x03	; 3
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	80 40       	sbci	r24, 0x00	; 0
 1b6:	90 40       	sbci	r25, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <main+0x138>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x142>
 1bc:	00 00       	nop
 1be:	6c cf       	rjmp	.-296    	; 0x98 <main+0x1e>
			}
			_delay_ms(1000);
		}
		
		else if(bit_is_set(PINA,3))
 1c0:	cb 9b       	sbis	0x19, 3	; 25
 1c2:	0e c0       	rjmp	.+28     	; 0x1e0 <main+0x166>
		{
			while(!(UCSRA &(1<<UDRE)));
 1c4:	5d 9b       	sbis	0x0b, 5	; 11
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <main+0x14a>
			{
				UDR ='6';
 1c8:	86 e3       	ldi	r24, 0x36	; 54
 1ca:	8c b9       	out	0x0c, r24	; 12
 1cc:	2f e3       	ldi	r18, 0x3F	; 63
 1ce:	8d e0       	ldi	r24, 0x0D	; 13
 1d0:	93 e0       	ldi	r25, 0x03	; 3
 1d2:	21 50       	subi	r18, 0x01	; 1
 1d4:	80 40       	sbci	r24, 0x00	; 0
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <main+0x158>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <main+0x162>
 1dc:	00 00       	nop
 1de:	5c cf       	rjmp	.-328    	; 0x98 <main+0x1e>
			}
			_delay_ms(1000);
		}
		
		else if(bit_is_set(PINA,2))
 1e0:	ca 9b       	sbis	0x19, 2	; 25
 1e2:	0e c0       	rjmp	.+28     	; 0x200 <main+0x186>
		{
			while(!(UCSRA &(1<<UDRE)));
 1e4:	5d 9b       	sbis	0x0b, 5	; 11
 1e6:	fe cf       	rjmp	.-4      	; 0x1e4 <main+0x16a>
			{
				UDR ='9';
 1e8:	89 e3       	ldi	r24, 0x39	; 57
 1ea:	8c b9       	out	0x0c, r24	; 12
 1ec:	2f e3       	ldi	r18, 0x3F	; 63
 1ee:	8d e0       	ldi	r24, 0x0D	; 13
 1f0:	93 e0       	ldi	r25, 0x03	; 3
 1f2:	21 50       	subi	r18, 0x01	; 1
 1f4:	80 40       	sbci	r24, 0x00	; 0
 1f6:	90 40       	sbci	r25, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0x178>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x182>
 1fc:	00 00       	nop
 1fe:	4c cf       	rjmp	.-360    	; 0x98 <main+0x1e>
			}
			_delay_ms(1000);
		}
		
		else if(bit_is_set(PINA,1))
 200:	c9 9b       	sbis	0x19, 1	; 25
 202:	4a cf       	rjmp	.-364    	; 0x98 <main+0x1e>
		{
			while(!(UCSRA &(1<<UDRE)));
 204:	5d 9b       	sbis	0x0b, 5	; 11
 206:	fe cf       	rjmp	.-4      	; 0x204 <main+0x18a>
			{
				UDR = '#';
 208:	83 e2       	ldi	r24, 0x23	; 35
 20a:	8c b9       	out	0x0c, r24	; 12
 20c:	2f e3       	ldi	r18, 0x3F	; 63
 20e:	8d e0       	ldi	r24, 0x0D	; 13
 210:	93 e0       	ldi	r25, 0x03	; 3
 212:	21 50       	subi	r18, 0x01	; 1
 214:	80 40       	sbci	r24, 0x00	; 0
 216:	90 40       	sbci	r25, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0x198>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x1a2>
 21c:	00 00       	nop
 21e:	3c cf       	rjmp	.-392    	; 0x98 <main+0x1e>

00000220 <_exit>:
 220:	f8 94       	cli

00000222 <__stop_program>:
 222:	ff cf       	rjmp	.-2      	; 0x222 <__stop_program>
